/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
@import url("https://fonts.googleapis.com/css?family=Lobster|Open+Sans:300,400&display=swap");
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  display: none;
  z-index: 101;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  -webkit-backdrop-filter: blur(2px);
  backdrop-filter: blur(2px); }

.mobile-nav {
  -webkit-box-align: center;
  align-items: center;
  position: fixed;
  z-index: 101;
  top: 0;
  right: -80%;
  background-color: rgba(0, 0, 0, 0);
  width: 80%;
  height: 100vh;
  -webkit-transition: all .2s ease-out;
  transition: all .2s ease-out; }
  .mobile-nav .mobile-nav__items {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    flex-direction: column;
    -webkit-box-align: center;
    align-items: center;
    list-style: none; }
    .mobile-nav .mobile-nav__items .close {
      align-self: flex-end;
      margin-right: 1rem; }
      .mobile-nav .mobile-nav__items .close .close-button {
        font-size: 2rem;
        color: #fff;
        border: none;
        margin-bottom: 2rem;
        background-color: rgba(0, 0, 0, 0);
        cursor: pointer; }
        .mobile-nav .mobile-nav__items .close .close-button:focus {
          outline: none; }
    .mobile-nav .mobile-nav__items .main-menu--search {
      width: 80%;
      height: 3rem;
      background-color: #fff;
      border-radius: 2rem;
      display: -webkit-box;
      display: flex;
      -webkit-box-align: center;
      align-items: center;
      -webkit-box-pack: justify;
      justify-content: space-between;
      padding-left: 1rem;
      overflow: hidden;
      margin-bottom: 2rem; }
      .mobile-nav .mobile-nav__items .main-menu--search .search {
        width: 80%;
        border: none;
        padding-left: 1rem; }
        .mobile-nav .mobile-nav__items .main-menu--search .search:focus {
          outline: none; }
      .mobile-nav .mobile-nav__items .main-menu--search button[type="submit"] {
        border: none;
        background: none;
        cursor: pointer;
        height: 100%;
        padding: 0 1rem; }
        .mobile-nav .mobile-nav__items .main-menu--search button[type="submit"]:focus {
          outline: none; }
        .mobile-nav .mobile-nav__items .main-menu--search button[type="submit"] i {
          color: #b6b6b6; }
    .mobile-nav .mobile-nav__items .main-menu--navigation-item {
      margin-bottom: 2rem;
      font-size: 1.5rem; }

.mobile-nav-show {
  right: 0; }

.first-part {
  background-image: url("../../img/Layer25.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: bottom;
  width: 100%;
  height: 56rem;
  position: relative; }
  @media screen and (max-width: 1070px) {
    .first-part {
      height: 36rem; } }

.get-started {
  width: 21rem;
  padding: 1.2rem 0;
  border-radius: 2rem;
  border: none;
  font-weight: bold;
  outline: none;
  cursor: pointer; }

footer {
  background-color: #2e3b4e;
  height: 10rem;
  padding-top: 3rem;
  font-family: "Open Sans", sans-serif; }
  footer p {
    margin: 0 12rem;
    color: #fff;
    font-size: 0.8rem; }
    @media screen and (max-width: 1200px) {
      footer p {
        margin-left: 1rem; } }

.main-header {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  flex-direction: row;
  flex-wrap: nowrap;
  -webkit-box-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  align-items: center;
  padding: 0 3rem; }
  .main-header .logo {
    color: #e7526b;
    font-size: 2rem;
    font-family: "Lobster", sans-serif; }
  .main-header .main-menu {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: right;
    justify-content: right;
    -webkit-box-align: center;
    align-items: center; }
    .main-header .main-menu .main-menu--navigation {
      height: 100px; }
      .main-header .main-menu .main-menu--navigation .main-menu--navigation-items {
        margin: 0;
        list-style: none;
        height: 100%;
        display: -webkit-box;
        display: flex;
        -webkit-box-align: center;
        align-items: center; }
    @media screen and (max-width: 1070px) {
      .main-header .main-menu {
        display: none; } }
  .main-header .main-menu--search {
    height: 3rem;
    background-color: #fff;
    border-radius: 2rem;
    display: -webkit-box;
    display: flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    justify-content: space-between;
    padding-left: 1rem;
    overflow: hidden; }
    .main-header .main-menu--search .search {
      border: none;
      padding-left: 1rem; }
      .main-header .main-menu--search .search:focus {
        outline: none; }
    .main-header .main-menu--search button[type="submit"] {
      border: none;
      background: none;
      cursor: pointer;
      height: 100%;
      padding: 0 1rem; }
      .main-header .main-menu--search button[type="submit"]:focus {
        outline: none; }
      .main-header .main-menu--search button[type="submit"] i {
        color: #b6b6b6; }
  .main-header .toggle-button__container {
    display: none; }
    .main-header .toggle-button__container .toggle-button {
      width: 3rem;
      background: transparent;
      border: none;
      cursor: pointer;
      padding-top: 0;
      padding-bottom: 0;
      vertical-align: middle; }
    .main-header .toggle-button__container .toggle-button:focus {
      outline: none; }
    .main-header .toggle-button__container .toggle-button__bar {
      width: 100%;
      height: 0.2rem;
      background: #fff;
      display: block;
      margin: 0.6rem 0; }
    @media screen and (max-width: 1070px) {
      .main-header .toggle-button__container {
        display: block; } }
  @media screen and (max-width: 1070px) {
    .main-header .logo, .main-header .toggle-button__container {
      margin-top: 2rem; } }

.main-menu--navigation-item {
  margin-right: 3rem; }
  .main-menu--navigation-item a {
    color: #fff;
    text-decoration: none;
    border-bottom: 2px solid rgba(255, 255, 255, 0);
    padding-bottom: 1rem;
    -webkit-transition: border-bottom .1s linear;
    transition: border-bottom .1s linear; }
    .main-menu--navigation-item a:hover {
      border-bottom: 2px solid #fff; }

.overview {
  position: absolute;
  left: 12rem;
  bottom: 16rem;
  width: 32rem;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  -webkit-box-align: end;
  align-items: flex-end;
  font-family: "Open Sans", sans-serif; }
  .overview h1 {
    color: #fff;
    font-size: 3rem;
    font-weight: 300;
    text-align: right; }
  .overview .overview-get-started-button {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    flex-direction: column;
    -webkit-box-align: end;
    align-items: flex-end;
    width: 17.5rem;
    color: #fff; }
    .overview .overview-get-started-button button {
      background: #8824cd;
      font-family: inherit;
      border-radius: 3rem;
      border: none;
      cursor: pointer;
      padding: 1.4rem 4.2rem;
      outline: none;
      color: inherit; }
      @media screen and (max-width: 1070px) {
        .overview .overview-get-started-button button {
          padding: 1.4rem 2rem; } }
    .overview .overview-get-started-button p {
      font-size: .75rem;
      align-self: center;
      padding-left: 1rem;
      width: 95%; }
      @media screen and (max-width: 1070px) {
        .overview .overview-get-started-button p {
          padding-left: 0;
          text-align: right; } }
  @media screen and (max-width: 1200px) {
    .overview {
      left: 1rem; } }
  @media screen and (max-width: 1070px) {
    .overview {
      width: 95%;
      bottom: 8rem; }
      .overview h1 {
        font-size: 2rem; } }

.features {
  background-color: #2e3b4e;
  color: #fff;
  padding: 5rem 0;
  font-family: "Open Sans", sans-serif; }
  .features .features__list {
    margin: 0 auto;
    max-width: 820px;
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    -webkit-box-pack: justify;
    justify-content: space-between; }
    .features .features__list .feature {
      width: 48%;
      margin-bottom: 3.8rem;
      margin: 0 1%; }
      .features .features__list .feature .feature__title {
        text-transform: uppercase;
        font-size: 1rem;
        margin: 0 0 2.4rem 0; }
      .features .features__list .feature .feature__description {
        line-height: 2;
        text-align: justify; }
    @media screen and (max-width: 1070px) {
      .features .features__list {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        flex-direction: column;
        -webkit-box-align: center;
        align-items: center; }
        .features .features__list .feature {
          width: 80%;
          margin-bottom: 3rem; }
          .features .features__list .feature .feature__title, .features .features__list .feature .feature__description {
            text-align: center; } }
  .features:after {
    content: "some content";
    width: 100px;
    margin: 0 auto;
    border-radius: 50%;
    position: relative;
    top: 80px;
    left: 50%;
    margin-left: -50px;
    padding: 2rem 0;
    background-color: #2e3b4e;
    color: #2e3b4e; }

.wicked {
  background: url("../../img/Layer29.png");
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  align-items: center; }
  .wicked .wicked__container {
    max-width: 800px;
    margin: 10rem 0;
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    flex-direction: column;
    -webkit-box-align: center;
    align-items: center;
    color: #fff;
    font-family: "Open Sans", sans-serif; }
    .wicked .wicked__container .wicked__title {
      font-size: 2rem;
      font-weight: 100;
      text-align: center;
      margin: 0; }
    .wicked .wicked__container .wicked__description {
      line-height: 2;
      text-align: center;
      margin: 2rem 0; }
    .wicked .wicked__container .wicked__button {
      background-color: #fff;
      color: #e7526b; }

.heading {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center; }
  .heading .heading__image {
    flex-basis: 40%; }
    .heading .heading__image img {
      width: 100%;
      height: auto;
      vertical-align: middle; }
  .heading .heading__content {
    flex-basis: 50%;
    margin: 0 5%;
    font-family: 'Open Sans', sans-serif;
    color: #2e3b4e; }
    .heading .heading__content .heading__title {
      text-transform: uppercase;
      font-size: 1.2rem; }
    .heading .heading__content .heading__main-description {
      font-size: 1.2rem;
      line-height: 1.5; }
    .heading .heading__content .heading__secondary-description {
      font-size: 1rem;
      line-height: 1.5; }
  @media screen and (max-width: 1070px) {
    .heading {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      flex-direction: column; }
      .heading .heading__image {
        width: 100%; }
      .heading .heading__content {
        -webkit-box-ordinal-group: 3;
        order: 2; } }

.heading__second {
  -webkit-box-pack: justify;
  justify-content: space-between; }
  .heading__second .heading__content {
    margin-left: 12rem; }
    @media screen and (max-width: 1200px) {
      .heading__second .heading__content {
        margin-left: 1rem; } }

.experience {
  position: relative;
  background: url("../../img/Layer12.png") center/cover no-repeat;
  height: 36rem;
  display: -webkit-box;
  display: flex; }
  .experience .experience__cover {
    position: absolute;
    height: 100%;
    width: 100%;
    background-color: rgba(82, 26, 102, 0.8);
    z-index: 1; }
  .experience .experience__container {
    position: relative;
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    flex-direction: column;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    max-width: 800px;
    margin: 0rem auto;
    z-index: 2;
    color: #fff;
    font-family: "Open Sans", sans-serif; }
    .experience .experience__container .experience__title {
      font-weight: 100;
      margin: 0;
      text-align: center; }
    .experience .experience__container .experience__description {
      text-align: center;
      color: #a87bb7;
      margin: 2rem 0;
      line-height: 2; }
    .experience .experience__container .experience__button {
      color: #fff;
      background-color: #8824cd;
      margin-bottom: 1rem; }

.photography {
  position: relative;
  height: 42rem;
  background: url("../../img/Layer27.png") center/cover no-repeat; }
  .photography .photography__container {
    position: absolute;
    bottom: 6rem;
    left: 12rem;
    max-width: 520px;
    font-family: "Open Sans", sans-serif;
    color: #fff; }
    .photography .photography__container .photography__button {
      border: 2px solid #fff;
      border-radius: 2rem;
      background-color: rgba(0, 0, 0, 0);
      padding: 0.8rem;
      width: 9rem;
      font-size: 0.8rem;
      font-weight: bold;
      color: inherit; }
    .photography .photography__container .photography__title {
      font-weight: 100; }
    .photography .photography__container .photography__photograph {
      display: -webkit-box;
      display: flex;
      -webkit-box-align: center;
      align-items: center; }
      .photography .photography__container .photography__photograph small {
        margin-left: 0.5rem; }
    @media screen and (max-width: 1200px) {
      .photography .photography__container {
        left: 1rem; } }

.get-in-touch {
  height: 22rem;
  background-color: #e7526b;
  padding-top: 6rem; }
  .get-in-touch .get-in-touch__container {
    max-width: 400px;
    color: #fff;
    margin-left: 12rem;
    font-family: "Open Sans", sans-serif; }
    .get-in-touch .get-in-touch__container .get-in-touch__title {
      margin: 0;
      font-size: 1rem;
      text-transform: uppercase; }
    .get-in-touch .get-in-touch__container .get-in-touch__description {
      line-height: 2;
      margin: 2rem 0; }
    .get-in-touch .get-in-touch__container .get-in-touch__email {
      text-decoration: underline;
      cursor: pointer;
      color: inherit; }
    @media screen and (max-width: 1200px) {
      .get-in-touch .get-in-touch__container {
        margin-left: 1rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
